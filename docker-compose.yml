services:
  bot:
    build: .
    container_name: rodnulya-bot
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"  # Expose webhook port
    volumes:
      - ./data:/app/data # Persistent storage for bot data
      - ./logs:/app/logs # Persistent storage for logs
      - ./resources:/app/resources # Persistent storage for resources
    networks:
      - rodnulya_network

  postgres:
    image: postgres:16-alpine
    container_name: rodnulya-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: rodnulya
      POSTGRES_USER: rodnulya
      POSTGRES_PASSWORD: rodnulya_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rodnulya"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rodnulya_network

networks:
  rodnulya_network:
    external: false
